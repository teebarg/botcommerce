services:
  traefik:
    image: traefik:v2.9
    command:
      # Enable Docker in Traefik, so that it reads labels from Docker services
      - --providers.docker
      # Add a constraint to only use services with the label for this stack
      - --providers.docker.constraints=Label(`traefik.constraint-label`, `traefik-public`)
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      # - --log.level=DEBUG  # Debug logging
    ports:
      - 7000:80 # HTTP entrypoint
      - 7001:8080 # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - traefik-public
      - default
    labels:
      # Enable Traefik
      - traefik.enable=true
      - traefik.constraint-label=traefik-public
      # Dashboard route setup
      - traefik.http.routers.traefik-dashboard.entrypoints=http
      - traefik.http.routers.traefik-dashboard.rule=Host(`traefik.localhost`)
      - traefik.http.services.traefik-dashboard.loadbalancer.server.port=8080
      - traefik.http.routers.traefik-dashboard.service=api@internal
      - traefik.http.middlewares.https-redirect.contenttype.autodetect=false

  backend:
    image: 'shop-backend:${TAG-latest}'
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.constraint-label=traefik-public

      - traefik.http.services.shop-backend.loadbalancer.server.port=8000

      - traefik.http.routers.shop-backend-http.rule=Host(`api.localhost`)
      - traefik.http.routers.shop-backend-http.entrypoints=http
    ports:
      - "7002:8000"
    networks:
      - traefik-public
      - default
    env_file:
      - ./backend/.env
    build:
      context: ./backend
      args:
        INSTALL_DEV: ${INSTALL_DEV-false}
    platform: linux/amd64 # Patch for M1 Mac
    depends_on:
      - postgres
      - meilisearch
    command:
      - fastapi
      - run
      - --reload
      - "app/main.py"
    develop:
      watch:
        - path: ./backend
          action: sync
          target: /app
          ignore:
            - ./backend/.venv
            - .venv
        - path: ./backend/pyproject.toml
          action: rebuild
    volumes:
      - ./backend/:/app
      - /app/.venv

  # frontend:
  #   build:
  #       context: ./frontend
  #   command: sh -c "npm run dev"
  #   ports:
  #       - "7003:3000"
  #   volumes:
  #       - ./frontend:/app
  #       - /app/node_modules
  #       - /app/.next
  #   environment:
  #       - NODE_ENV=development
  #       - NEXT_TELEMETRY_DISABLED=1
  #       - WATCHPACK_POLLING=true
  #   depends_on:
  #       - backend
  #   networks:
  #       - traefik-public
  #   labels:
  #       - traefik.enable=true
  #       - traefik.docker.network=traefik-public
  #       - traefik.constraint-label=traefik-public

  #       - traefik.http.services.frontend.loadbalancer.server.port=3000

  #       - traefik.http.routers.frontend-http.rule=Host(`store.localhost`)
  #       - traefik.http.routers.frontend-http.entrypoints=http
  #   env_file:
  #     - ./frontend/.env


  postgres:
    image: postgres:15
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d tbo" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    ports:
      - "7004:5432"
    networks:
      - traefik-public
      - default
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: tbo
    volumes:
      - pg-data:/var/lib/postgresql/data

  meilisearch:
    image: getmeili/meilisearch:v1.4
    ports:
      - "7005:7700"
    networks:
      - traefik-public
      - default
    environment:
      MEILI_NO_ANALYTICS: "true"
      MEILI_MASTER_KEY: "secret"
    volumes:
      - meili-data:/meili_data
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.constraint-label=traefik-public

      - traefik.http.services.meilisearch.loadbalancer.server.port=7700

      - traefik.http.routers.meilisearch-http.rule=Host(`meilisearch.localhost`)
      - traefik.http.routers.meilisearch-http.entrypoints=http

  adminer:
    image: adminer:5.3.0
    ports:
      - "7006:8080"
    networks:
      - traefik-public
      - default
    depends_on:
      - postgres
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.constraint-label=traefik-public

      - traefik.http.services.adminer.loadbalancer.server.port=8080

      - traefik.http.routers.adminer-http.rule=Host(`adminer.localhost`)
      - traefik.http.routers.adminer-http.entrypoints=http

  redis:
    image: redis:alpine
    ports:
      - "7007:6379"
    networks:
      - traefik-public
      - default
    volumes:
      - redis-data:/data

  # worker:
  #   image: 'shop-backend:${TAG-latest}'
  #   depends_on:
  #     - backend
  #     - redis
  #   command: huey_consumer.py huey.huey
  #   volumes:
  #     - ./backend:/app
  #     - /app/.venv
  #   env_file:
  #     - ./backend/.env
  #   networks:
  #     - traefik-public
  #     - default

  # recommendation:
  #   image: 'shop-recommendation:${TAG-latest}'
  #   labels:
  #     - traefik.enable=true
  #     - traefik.docker.network=traefik-public
  #     - traefik.constraint-label=traefik-public

  #     - traefik.http.services.shop-recommendation.loadbalancer.server.port=8000

  #     - traefik.http.routers.shop-recommendation-http.rule=Host(`recommendation.localhost`)
  #     - traefik.http.routers.shop-recommendation-http.entrypoints=http
  #   ports:
  #     - "7008:8000"
  #   networks:
  #     - traefik-public
  #     - default
  #   env_file:
  #     - ./recommendation/.env
  #   build:
  #     context: ./recommendation
  #     args:
  #       INSTALL_DEV: ${INSTALL_DEV-false}
  #   platform: linux/amd64 # Patch for M1 Mac
  #   depends_on:
  #     - postgres
  #     - meilisearch
  #   command:
  #     - fastapi
  #     - run
  #     - --reload
  #     - "main.py"
  #   develop:
  #     watch:
  #       - path: ./recommendation
  #         action: sync
  #         target: /
  #         ignore:
  #           - ./recommendation/.venv
  #           - .venv
  #       - path: ./recommendation/pyproject.toml
  #         action: rebuild
  #   volumes:
  #     - ./recommendation/:/app
  #     - /app/.venv

  worker:
    image: 'shop-worker:${TAG-latest}'
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.constraint-label=traefik-public

      - traefik.http.services.shop-worker.loadbalancer.server.port=8000

      - traefik.http.routers.shop-worker-http.rule=Host(`worker.localhost`)
      - traefik.http.routers.shop-worker-http.entrypoints=http
    ports:
      - "7009:8000"
    networks:
      - traefik-public
      - default
    env_file:
      - ./worker/.env
    build:
      context: ./worker
      dockerfile: Dockerfile.dev
      args:
        INSTALL_DEV: ${INSTALL_DEV-false}
    platform: linux/amd64 # Patch for M1 Mac
    depends_on:
      - postgres
      - meilisearch
    command:
      - fastapi
      - run
      - --reload
      - "main.py"
    develop:
      watch:
        - path: ./worker
          action: sync
          target: /
          ignore:
            - ./worker/.venv
            - .venv
        - path: ./worker/pyproject.toml
          action: rebuild
    volumes:
      - ./worker/:/app
      - /app/.venv

volumes:
  pg-data:
  meili-data:
  redis-data:


networks:
  traefik-public:
    external: false
